{"version":3,"sources":["Components/ImageGalleryItem/ImageGalleryItem.module.css","Components/Modal/Modal.module.css","Components/ImageGallery/ImageGallery.module.css","Components/Button/Button.module.css","Components/Searchbar/Searchbar.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/Button/Button.js","Components/Loader/Loader.js","Components/Modal/Modal.js","Components/services/gallery-api.js","Components/ImageGallery/ImageGallery.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Searchbar","state","value","handleNameChange","event","setState","currentTarget","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","toast","className","this","type","onChange","placeholder","Component","ImageGalleryItem","url","tags","modalUrl","onClick","s","src","alt","ImageGalleryItemImage","Button","loader","query","color","height","width","timeout","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","onClose","handleBackdropClick","console","log","target","window","addEventListener","removeEventListener","createPortal","Overlay","children","page","fetch","then","res","ok","json","Promise","reject","Error","ImageGallery","pictures","error","status","showModal","getNextPagePictures","API","hits","length","prevState","scrollTo","top","documentElement","scrollHeight","behavior","warning","catch","finally","toggleModal","prevProps","message","map","image","webformatURL","largeImageURL","id","App","loading","autoClose","position","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c63d9e12.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__34MoO\",\"ImageGalleryItem-image\":\"ImageGalleryItem_ImageGalleryItem-image__GRDHA\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__3daAM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3qoWb\",\"Modal\":\"Modal_Modal__fuCx6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__-DduU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__Dvvu4\"};","import { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\n\nexport default class Searchbar extends Component {\n  state = {\n    value: '',\n  };\n\n  handleNameChange = event => {\n    this.setState({ value: event.currentTarget.value.toLowerCase() });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    if (this.state.value.trim() === '') {\n      toast('Enter name photo');\n      return;\n    }\n    this.props.onSubmit(this.state.value);\n    this.setState({ value: '' });\n  };\n\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            value={this.state.value}\n            onChange={this.handleNameChange}\n            // autocomplete=\"off\"\n            // autofocus\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './ImageGalleryItem.module.css';\n\nconst ImageGalleryItem = ({ url, tags, modalUrl, onClick }) => {\n  return (\n    <li className={s.ImageGalleryItem} onClick={() => onClick(modalUrl)}>\n      <img src={url} alt={tags} className={s.ImageGalleryItemImage} />\n    </li>\n  );\n};\n\nexport default ImageGalleryItem;\n\nImageGalleryItem.propTypes = {\n  url: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n  modalUrl: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nconst Button = ({ onClick }) => {\n  return (\n    <button type=\"button\" className={s.Button} onClick={onClick}>\n      Load more\n    </button>\n  );\n};\n\nexport default Button;\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import Loader from 'react-loader-spinner';\n\nexport default function loader({ query }) {\n  //other logic\n\n  return (\n    <Loader\n      type=\"Puff\"\n      color=\"#00BFFF\"\n      height={100}\n      width={100}\n      timeout={3000} //3 secs\n    />\n  );\n}\n","import { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport s from './Modal.module.css';\nimport PropTypes from 'prop-types';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillMount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleBackdropClick = e => {\n    console.log('click');\n    if (e.target === e.currentTarget) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const { url, onClose } = this.props;\n\n    return createPortal(\n      <div className={s.Overlay} onClick={onClose}>\n        <div className={s.Modal}>\n          <img src={url} alt=\"\" />\n          {this.props.children}\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nModal.propTypes = {\n  url: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n","const getPhoto = (query, page) => {\n  return fetch(\n    `https://pixabay.com/api/?q=${query}&page=${page}&key=22354412-39f12e0c13d349d19862b3301&image_type=photo&orientation=horizontal&per_page=12\n`,\n    // `https://pixabay.com/api/?key=22354412-39f12e0c13d349d19862b3301&q=${query}&image_type=photo&per_page=12&page=1`,\n  ).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(new Error(`Нет такого имени ${query}`));\n  });\n};\n\nexport default { getPhoto };\n","import { Component } from 'react';\nimport s from './ImageGallery.module.css';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport Button from '../Button/Button';\nimport Loader from '../Loader/Loader';\nimport Modal from '../Modal/Modal';\nimport API from '../services/gallery-api';\nimport { toast } from 'react-toastify';\n\n// 'idle' - простой\n// 'pending' - ожидается\n// 'resolved' - віполнился ок\n// 'rejected' - отклонено\n\nexport default class ImageGallery extends Component {\n  state = {\n    pictures: null,\n    error: null,\n    status: 'idle',\n    page: '1',\n    showModal: false,\n    modalUrl: '',\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { query } = this.props;\n    const { page } = this.state;\n\n    if (prevProps.query !== query) {\n      this.setState({ pictures: null, status: 'pending', page: 1 });\n\n      // if (prevName !== nextName) {\n      //   console.log('изменилось фото');\n      //   console.log('prevProps.query', prevName);\n      //   console.log('this.props.query', nextName);\n      //   this.setState({ pictures: null, status: 'pending', page: 1 });\n\n      API.getPhoto(query, page)\n        .then(pictures => this.setState({ pictures, status: 'resolved' }))\n        .catch(error => this.setState({ error, status: 'rejected' }));\n    }\n  }\n  //----------------------------------------------------------------------------------\n  getNextPagePictures = () => {\n    const { page } = this.state;\n    const { query } = this.props;\n\n    this.setState({ status: 'pending' });\n\n    API.getPhoto(query, page)\n      .then(pictures => {\n        if (pictures.hits.length === 0) {\n          toast.warning(`No more pictures for \"${query}\" query`);\n          return;\n        }\n        this.setState(prevState => {\n          return {\n            pictures: [...prevState.pictures, ...pictures.hits],\n            page: prevState.page + 1,\n          };\n        });\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        });\n      })\n      .catch(error => this.setState({ error, status: 'rejected' }))\n      .finally(() => this.setState({ status: 'idle' }));\n  };\n\n  // getDataPage(prevProps, prevState) {\n  //   const prevName = prevProps.query;\n  //   const nextName = this.props.query;\n\n  //   this.setState({ status: 'pending' });\n\n  //   API.getpictures(nextName, prevName)\n  //     .then(pictures => {\n  //       if (pictures.hits.length === 0) {\n  //         toast.warning(`No image`);\n  //         return;\n  //       }\n  //       this.setState(prevState => {\n  //         return {\n  //           pictures: [...prevState.pictures, ...pictures.hits],\n  //           page: prevState.page + 1,\n  //         };\n  //       });\n  //       window.scrollTo({\n  //         top: document.documentElement.scrollHeight,\n  //         behavior: 'smooth',\n  //       });\n  //     })\n  //     .catch(error => this.setState({ error, status: 'rejected' }));\n  // }\n  //----------------------------------------------------------------------------------\n  toggleModal = url => {\n    this.setState(prevState => {\n      return {\n        showModal: !prevState.showModal,\n        modalUrl: url,\n      };\n    });\n  };\n\n  render() {\n    const { pictures, error, status, showModal, modalUrl } = this.state;\n\n    if (status === 'idle') {\n      return <div>Ведите название!!!</div>;\n    }\n\n    if (status === 'pending') {\n      return <Loader />;\n      // <h1> Downloading... </h1>;\n    }\n\n    if (status === 'rejected') {\n      return <h1>{error.message}</h1>;\n    }\n\n    if (status === 'resolved') {\n      return (\n        <ul className={s.ImageGallery}>\n          {pictures.hits &&\n            pictures.hits.map(image => (\n              <ImageGalleryItem\n                url={image.webformatURL}\n                key={image.id}\n                tags={image.tags}\n                modalUrl={image.largeImageURL}\n                onClick={this.toggleModal}\n              />\n            ))}\n          {pictures && <Button onClick={this.getNextPagePictures} />}\n          {showModal && <Modal onClose={this.toggleModal} url={modalUrl}></Modal>}\n        </ul>\n      );\n    }\n\n    // showModal && <Modal modalImg={image.webformatURL} onClick={this.toggleModal} />;\n\n    // return (\n    //   <ul className=\"ImageGallery\">\n    //     {error && <h1>{error.message}</h1>}\n    //     {loading && <h1> Downloading... </h1>}\n    //     {!query && <div>Ведите название!!!</div>}\n    //     {/* {pictures && <img src={pictures.hits[0].webformatURL} alt={pictures.tags} width=\"300\"></img>} */}\n\n    //     {pictures && (\n    //       <ImageGalleryItem\n    //         url={pictures.hits[1].webformatURL}\n    //         key={pictures.id}\n    //         tags={pictures.hits[1].tags}\n    //       />\n    //     )}\n    //   </ul>\n    // );\n  }\n}\n","import { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\nimport Searchbar from './Components/Searchbar/Searchbar';\nimport ImageGallery from './Components/ImageGallery/ImageGallery';\n\nclass App extends Component {\n  state = {\n    query: '',\n    loading: false,\n  };\n\n  componentDidMount() {}\n\n  onSubmit = query => {\n    this.setState({ query });\n    console.log(query);\n  };\n  render() {\n    return (\n      <>\n        <Searchbar onSubmit={this.onSubmit} />\n        {/* {this.state.loading && <h1> Downloading... </h1>} */}\n        <ImageGallery query={this.state.query} />\n\n        <ToastContainer autoClose={3000} position=\"top-left\" />\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}